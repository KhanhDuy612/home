stages:
  - build
  - deploy
variables:
  DOCKER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
  CONTAINER_NAME: wp-gallery
build:
  tags:
    - comunity
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: '/certs'
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $DOCKER_IMAGE -f Dockerfile .
    - docker push $DOCKER_IMAGE
  only:
    - develop
deploy:
  tags:
    - comunity
  stage: deploy
  image: alpine:latest
  before_script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile=/dev/null" > ~/.ssh/config
    - ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts 2>/dev/null || true
  script:
    - ssh $SERVER_USER@$SERVER_HOST "
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
      docker pull $DOCKER_IMAGE &&
      docker stop $CONTAINER_NAME || true &&
      docker rm $CONTAINER_NAME || true &&
      docker run -d --name $CONTAINER_NAME --network bridge -p 3014:3014 --restart unless-stopped $DOCKER_IMAGE &&
      echo 'Cleaning up old and unused images...' &&
      docker images | grep ${CI_REGISTRY_IMAGE} | grep -v ${CI_COMMIT_REF_SLUG} | awk '{print \$1\":\"\$2}' | xargs -r docker rmi -f || true &&
      docker system prune -f --filter 'until=24h'"
  only:
    - develop
